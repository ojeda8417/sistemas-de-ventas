/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUInterfaces;

//import Clases.ConexionesBD;
import Clases.conectar;
import java.awt.HeadlessException;
import java.io.File;
import java.io.IOException;
import static java.lang.Thread.sleep;
import java.sql.Connection;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author RAUL
 */
public class GUIImportarBD extends javax.swing.JFrame {

    /**
     * Creates new form GUIImportarBD
     */
    public GUIImportarBD() {
        initComponents();
       setLocationRelativeTo(null);
        try {
//            conectar cc = new conectar();
//            Connection cn = cc.conexion();
            ArchivosImport.setVisible(false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e, "Error", 2);
        }
    }

    public void iniciarCarga() {
        new Thread() {

            @Override
            public void run() {
                int i = 0;
                while (i <= 100) {
                    i++;
                    progresoImport.setValue(i);
                    try {
                        sleep(100);
                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                }

            }
        }.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ArchivosImport = new javax.swing.JFileChooser();
        jButton2 = new javax.swing.JButton();
        progresoImport = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton2.setText("Importar Base de datos");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        progresoImport.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                progresoImportStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 387, Short.MAX_VALUE)
                    .addComponent(progresoImport, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(progresoImport, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            String archivo = null;
            ArchivosImport.setVisible(true);
            int result = ArchivosImport.showOpenDialog(this);

            if (result == JFileChooser.APPROVE_OPTION) {
                archivo = ArchivosImport.getSelectedFile().toString().trim();
                System.out.println(archivo);
                
                //Esta web te ayudara entender mejor
                //https://ovruni.wordpress.com/2009/11/07/importar-archivos-sql-con-mysql/
                
                Runtime bck = Runtime.getRuntime();
                bck.exec("C:\\xampp\\mysql\\bin\\mysqldump.exe --host=localhost --user=root --password=   < "+archivo+" --databases system_ventas");
                
//                bck.exec("C:\\wamp\\bin\\mysql\\mysql5.6.17\\bin\\mysqldump.exe --host=localhost --user=root --password "+ archivo + " --databases < system_ventas");
                 
                iniciarCarga();
              
            }
        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(null, e, "Error!", 2);
        } catch (IOException ex) {
            Logger.getLogger(GUIImportarBD.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println(ex.getMessage());
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void progresoImportStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_progresoImportStateChanged
        if (progresoImport.getValue() == 20) {
            JOptionPane.showMessageDialog(null, "Importacion generada con Ã©xito");
            this.dispose();
        }
    }//GEN-LAST:event_progresoImportStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIImportarBD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIImportarBD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIImportarBD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIImportarBD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUIImportarBD().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser ArchivosImport;
    private javax.swing.JButton jButton2;
    private javax.swing.JProgressBar progresoImport;
    // End of variables declaration//GEN-END:variables
}
